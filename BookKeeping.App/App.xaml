<Application x:Class="BookKeeping.App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:converters.ui="clr-namespace:BookKeeping.UI.Converters;assembly=BookKeeping.UI"
             xmlns:behaviours="clr-namespace:BookKeeping.UI.Behaviors;assembly=BookKeeping.UI"
             xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:viewmodels="clr-namespace:BookKeeping.App.ViewModels"
             xmlns:p="clr-namespace:BookKeeping.App.Properties"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/BookKeeping.App;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/BookKeeping.App;component/Resources/Icons.xaml" />
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
                    <converters.ui:ValueConverterGroup x:Key="InverseBooleanToVisibilityConverterKey">
                        <converters.ui:InverseBooleanConverter></converters.ui:InverseBooleanConverter>
                        <BooleanToVisibilityConverter ></BooleanToVisibilityConverter>
                    </converters.ui:ValueConverterGroup>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type DataGrid}" x:Key="ListDetailDataGridKey" BasedOn="{StaticResource {x:Type DataGrid}}">
                <Setter Property="AlternationCount" Value="2"></Setter>
                <Setter Property="AutoGenerateColumns" Value="False"></Setter>
                <Setter Property="IsSynchronizedWithCurrentItem" Value="True"></Setter>
                <Setter Property="SelectedItem">
                    <Setter.Value>
                        <Binding Path="SelectedItem" Mode="TwoWay"></Binding>
                    </Setter.Value>
                </Setter>
                <Setter Property="AreRowDetailsFrozen" Value="True"></Setter>
                <Setter Property="Visibility">
                    <Setter.Value>
                        <Binding Path="IsLoading" Mode="OneWay" Converter="{StaticResource InverseBooleanToVisibilityConverterKey}"></Binding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Command="{Binding Path=EditItemCmd}" CommandParameter="{Binding Path=SelectedItem}" Header="{x:Static p:Resources.Edit}"></MenuItem>
                            <Separator></Separator>
                            <MenuItem Command="Cut" Header="{x:Static p:Resources.Cut}"></MenuItem>
                            <MenuItem Command="Copy" Header="{x:Static p:Resources.Copy}"></MenuItem>
                            <MenuItem Command="Paste" Header="{x:Static p:Resources.Paste}"></MenuItem>
                            <MenuItem Command="Delete" Header="{x:Static p:Resources.Delete}"></MenuItem>
                            <Separator></Separator>
                            <MenuItem Command="SelectAll" Header="{x:Static p:Resources.Select_All}"></MenuItem>
                            <Separator></Separator>
                            <MenuItem Command="Find" Header="{x:Static p:Resources.Find}"></MenuItem>
                            <MenuItem Command="{Binding Path=FilterPopup.OpenCmd}" Header="{x:Static p:Resources.Filter}"></MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                <Setter Property="DetailsVisibility" Value="Collapsed"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Padding" Value="2" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHighlight}" Value="True">
                        <Setter Property="Background" Value="#99FA6800"></Setter>
                        <Setter Property="Foreground" Value="White"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsValid}" Value="False">
                        <Setter Property="Background" Value="#99D80073"></Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsEdit, Mode=TwoWay}" Value="True"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="DetailsVisibility" Value="Visible"></Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                            <Condition Binding="{Binding Path=IsEdit, Mode=TwoWay}" Value="True"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        <Setter Property="Opacity" Value=".75"></Setter>
                    </MultiDataTrigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="true"></Condition>
                            <Condition Property="DetailsVisibility" Value="Collapsed"></Condition>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                    </MultiTrigger>
                    <Trigger Property="IsEnabled"   Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="False" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                        <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="EditableLabelKey">
                <Rectangle Width="14" x:Name="EditLabel"
                           Height="14"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}"
                                       Visibility="{Binding Path=HasChanges,Converter={StaticResource BooleanToVisibilityConverterKey}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit_add}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsEdit}" Value="True"></Condition>
                            <Condition Binding="{Binding IsValid}" Value="False"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" Value="#99D80073" TargetName="EditLabel"></Setter>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>