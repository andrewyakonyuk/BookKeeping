<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	                mc:Ignorable="d" 
	                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                    xmlns:Actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/BookKeeping.App;component/Resources/Colours.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries> 
    <Style TargetType="{x:Type TabControl}" x:Key="StandardTabControl">
        <Style.Resources>
            <Style  d:IsControlPart="true" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Padding" Value="6,1,6,1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="grid" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="bgUnselected" Fill="{TemplateBinding BorderBrush}" Stroke="{x:Null}" Margin="1,1,1,0" Opacity="0.3"/>
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{x:Null}" Padding="5,1"/>
                                <Rectangle x:Name="bgSelected" Fill="{TemplateBinding Background}" Stroke="{x:Null}" Margin="2,2,2,-1" Visibility="Collapsed"/>
                                <Grid x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="23" Margin="5,1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="15"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
								HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
								Margin="10,5,7,1" 
								x:Name="Content" 
								VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
								ContentSource="Header" 
								RecognizesAccessKey="True"/>
                                    <Button Grid.Column="1" Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding Path=CloseCommand}" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid Background="{TemplateBinding Background}">
                                                                <Border BorderThickness="0"  x:Name="CloseButtonBorder">
                                                                    <Border.BorderBrush>
                                                                        <SolidColorBrush Color="{DynamicResource AccentColor}"></SolidColorBrush>
                                                                    </Border.BorderBrush>
                                                                    <Path x:Name="ButtonPath" 
                                                                    Margin="2"
                                                                    Data="M0,0 L1,1 M0,1 L1,0"
                                                                    Stroke="{StaticResource CloseButtonStroke}" 
                                                                    StrokeThickness="2"
                                                                    StrokeStartLineCap="Flat"
                                                                    StrokeEndLineCap="Flat"
                                                                    Stretch="Uniform"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Center"/>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false"/>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <MultiDataTrigger.Setters>
                                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                                    </MultiDataTrigger.Setters>
                                                                </MultiDataTrigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundHighlighted}" />
                                                                    <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStrokeHighlighted}"/>
                                                                    <Setter TargetName="CloseButtonBorder" Property="BorderThickness" Value="1"></Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundPressed}"/>
                                                                    <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStroke}"/>
                                                                    <Setter TargetName="ButtonPath" Property="Margin" Value="2.5,2.5,1.5,1.5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" TargetName="bgUnselected" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Visibility" TargetName="bgSelected" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="Margin" TargetName="bgUnselected" Value="1,0,1,1"/>
                                    <Setter Property="Margin" TargetName="bgSelected" Value="2,-1,2,2"/>
                                    <Setter Property="Margin" TargetName="grid" Value="0,-2,0,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="Margin" TargetName="bgUnselected" Value="1,1,0,1"/>
                                    <Setter Property="Margin" TargetName="bgSelected" Value="2,2,-1,2"/>
                                    <Setter Property="Margin" TargetName="grid" Value="0,0,-2,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="Margin" TargetName="grid" Value="-2,0,0,0"/>
                                    <Setter Property="Margin" TargetName="bgUnselected" Value="0,1,1,1"/>
                                    <Setter Property="Margin" TargetName="bgSelected" Value="-1,2,2,2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                                    <!--<Setter Property="Foreground" TargetName="border" Value="Green"/>-->
                                    <Setter Property="Opacity" TargetName="Content" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundSelected}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
                                    <Setter Property="Background" Value="Transparent" TargetName="border"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontWeight" Value="Normal"/>
            </Style>
            <!--<Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="23" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentSource="Header" Margin="10,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                                            
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                                <Button Grid.Column="1" Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding Path=CloseCommand}">
                                            
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <Border BorderThickness="0"  x:Name="CloseButtonBorder">
                                                                <Border.BorderBrush>
                                                                    <SolidColorBrush Color="{DynamicResource AccentColor}"></SolidColorBrush>
                                                                </Border.BorderBrush>
                                                                <Path x:Name="ButtonPath" 
                                                                    Margin="2"
                                                                    Data="M0,0 L1,1 M0,1 L1,0"
                                                                    Stroke="{StaticResource CloseButtonStroke}" 
                                                                    StrokeThickness="2"
                                                                    StrokeStartLineCap="Flat"
                                                                    StrokeEndLineCap="Flat"
                                                                    Stretch="Uniform"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Center"/>
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                </MultiDataTrigger.Setters>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource CloseButtonBackgroundHighlighted}" />
                                                                <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStrokeHighlighted}"/>
                                                                <Setter TargetName="CloseButtonBorder" Property="BorderThickness" Value="1"></Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Background" Value="{StaticResource CloseButtonBackgroundPressed}"/>
                                                                <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStroke}"/>
                                                                <Setter TargetName="ButtonPath" Property="Margin" Value="2.5,2.5,1.5,1.5" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="False">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="false">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource BorderBrushSelected}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="{StaticResource BackgroundSelected}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
               
            </Style>-->
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Background="Transparent" BorderThickness="0,0,0,3" 
                                BorderBrush="{DynamicResource BackgroundSelected}">
                            <TabPanel Name="HeaderPanel" Panel.ZIndex="1" Margin="0,0,4,-1" 
                                IsItemsHost="True" KeyboardNavigation.TabIndex="1"/>
                        </Border>
                        <Border Grid.Row="1" Background="{DynamicResource Background}"/>
                        <ContentPresenter Grid.Row="1" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>