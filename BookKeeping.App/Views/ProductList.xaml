<UserControl x:Class="BookKeeping.App.Views.ProductList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              mc:Ignorable="d" 
             xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:viewmodels="clr-namespace:BookKeeping.App.ViewModels"
             xmlns:p="clr-namespace:BookKeeping.App.Properties"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:views="clr-namespace:BookKeeping.App.Views"
             d:DesignHeight="300" d:DesignWidth="600" d:DataContext="{viewmodels:ProductListViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/BookKeeping.App;component/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <Border 
            VerticalAlignment="Top" 
            HorizontalAlignment="Right"
            Panel.ZIndex="10"
            Margin="0"
            Width="200"
            BorderThickness="2,0,0,2"
            Background="White"
            Visibility="{Binding ShowFindPopup, Converter={StaticResource BooleanToVisibilityConverter}}"
            BorderBrush="{DynamicResource BackgroundSelected}">
            <DockPanel LastChildFill="True" >
                <TextBox
                 Controls:TextboxHelper.Watermark="{x:Static p:Resources.Search}"
                 BorderThickness="0"
                 Margin="3,1,0,1"
                 Text="{Binding Path=SearchText, Mode=TwoWay}"
                 Controls:TextboxHelper.ButtonCommand="{Binding SearchButtonCmd}"
                 Style="{DynamicResource SearchMetroTextBox}" />
            </DockPanel>
        </Border>
        <DataGrid ItemsSource="{Binding Path=Source}" IsSynchronizedWithCurrentItem="True"
                  IsReadOnly="True" SelectedItem="{Binding Path=SelectedItem}" AreRowDetailsFrozen="True"
                  SelectionChanged="DataGrid_SelectionChanged"
                  AutoGenerateColumns="False">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding Path=EditProductCmd}" Header="{x:Static p:Resources.Edit}">
                    </MenuItem>
                    <MenuItem Command="Cut" Header="{x:Static p:Resources.Cut}"></MenuItem>
                    <MenuItem Command="Copy" Header="{x:Static p:Resources.Copy}"></MenuItem>
                    <MenuItem Command="Paste" Header="{x:Static p:Resources.Paste}"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Command="SelectAll" Header="{x:Static p:Resources.Select_All}"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Command="Find" Header="{x:Static p:Resources.Find}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static p:Resources.Title}" Binding="{Binding Title}" Width="*" MaxWidth="200" MinWidth="100"/>
                <DataGridTextColumn Header="{x:Static p:Resources.ItemNo}" Binding="{Binding ItemNo}" Width="*" MaxWidth="200" MinWidth="100"></DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static p:Resources.Price}" Binding="{Binding Price}" Width="*" MaxWidth="200" MinWidth="100"></DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static p:Resources.Stock}" Binding="{Binding Stock}" Width="*" MaxWidth="200" MinWidth="100" />
                <DataGridTextColumn Header="{x:Static p:Resources.UnitOfMeasure}" Binding="{Binding UnitOfMeasure}" Width="*" MaxWidth="200" MinWidth="100" />
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <views:ProductDetailView Margin="10,10,10,10" Padding="2"></views:ProductDetailView>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="DetailsVisibility" Value="Collapsed"></Setter>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    <Setter Property="MinHeight"   Value="25" />
                    <Setter Property="Padding" Value="2" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=DataContext.ShowProductDetail, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type views:ProductList}}}" Value="True"></Condition>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="DetailsVisibility" Value="Visible"></Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"></Condition>
                                <Condition Property="DetailsVisibility" Value="Collapsed"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"   Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>

